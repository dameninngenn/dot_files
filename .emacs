(setq load-path (cons "~/.emacs.d/elisp" load-path))

;; install-elisp のコマンドを使える様に
(require 'install-elisp)
;; Elisp ファイルをインストールする場所を指定
(setq install-elisp-repository-directory "~/.emacs.d/elisp/")

(require 'auto-complete)
(global-auto-complete-mode t)

(require 'one-key)
(require 'one-key-config)

(require 'htmlize)
(require 'face2html)

;;(defadvice cperl-indent-command
;;    (around cperl-indent-or-complete)
;;   "Changes \\[cperl-indent-command] so it
;;autocompletes when at the end od a word."
;;    (if (looking-at "\\>")
;;	(dabbrev-expand nil)
;;     ad-do-it))
;;    (eval-after-load "cperl-mode"
;;       ' (progn (require ' debbrev) (ad-activate '
;;cperlindent-command)))

(load-library "cperl-mode")
  (add-to-list 'auto-mode-alist '("\\.[pP][LlMm][Cc]?$" . cperl-mode))
  (while (let ((orig (rassoc 'perl-mode auto-mode-alist)))
              (if orig (setcdr orig 'cperl-mode))))
  (while (let ((orig (rassoc 'perl-mode interpreter-mode-alist)))
           (if orig (setcdr orig 'cperl-mode))))
  (dolist (interpreter '("perl" "perl5" "miniperl" "pugs"))
    (unless (assoc interpreter interpreter-mode-alist)
      (add-to-list 'interpreter-mode-alist (cons interpreter 'cperl-mode))))

;;(autoload 'perl-mode "cperl-mode" "alternate mode for editing Perl programs" t)
;;(add-to-list 'interpreter-mode-alist '("perl" . cperl-mode)) ;; shebang(#!…)に"perl"があったらcperl-mode
;;(add-to-list 'auto-mode-alist '("\\.\\(p[lm]\\|f?cgi\\|t\\)$" . cperl-mode)) ;; こういう拡張子もcperl-mode
;;(defalias 'perl-mode 'cperl-mode) ;; perl-modeもcperl-mode
;;(setq cperl-indent-level 4)
;;(setq cperl-continued-statement-offset 4)
;;(setq cperl-comment-column 40)


(defvar one-key-menu-Register-and-Rectangle-alist nil
  "The `one-key' menu alist for Register and Rectangle.")

(setq one-key-menu-Register-and-Rectangle-alist
      '(
	(("C-@" . "Pop Global Mark") . pop-global-mark)
	(("C-b" . "List Buffers") . list-buffers)
	(("C-c" . "Save Buffers Kill Emacs") . save-buffers-kill-emacs)
	(("C-d" . "List Directory") . list-directory)
	(("C-e" . "Eval Last Sexp") . eval-last-sexp)
	(("C-f" . "Find File") . find-file)
	(("TAB" . "Indent Rigidly") . indent-rigidly)
	(("C-k" . "Kmacro Keymap") . kmacro-keymap)
	(("C-l" . "Downcase Region") . downcase-region)
	;; (("RET" . "Prefix Command") . Prefix Command)
	(("C-n" . "Set Goal Column") . set-goal-column)
	(("C-o" . "Delete Blank Lines") . delete-blank-lines)
	(("C-p" . "Mark Page") . mark-page)
	(("C-q" . "Toggle Read Only") . toggle-read-only)
	(("C-r" . "Find File Read Only") . find-file-read-only)
	(("C-s" . "Save Buffer") . save-buffer)
	(("C-t" . "Transpose Lines") . transpose-lines)
	(("C-u" . "Upcase Region") . upcase-region)
	(("C-v" . "Find Alternate File") . find-alternate-file)
	(("C-w" . "Write File") . write-file)
	(("C-x" . "Exchange Point And Mark") . exchange-point-and-mark)
	(("C-z" . "Suspend Emacs") . suspend-emacs)
	;; (("ESC" . "Prefix Command") . Prefix Command)
	(("$" . "Set Selective Display") . set-selective-display)
	(("'" . "Expand Abbrev") . expand-abbrev)
	(("(" . "Kmacro Start Macro") . kmacro-start-macro)
	((")" . "Kmacro End Macro") . kmacro-end-macro)
	(("*" . "Calc Dispatch") . calc-dispatch)
	(("+" . "Balance Windows") . balance-windows)
	(("-" . "Shrink Window If Larger Than Buffer") . shrink-window-if-larger-than-buffer)
	(("." . "Set Fill Prefix") . set-fill-prefix)
	(("0" . "Delete Window") . delete-window)
	(("1" . "Delete Other Windows") . delete-other-windows)
	(("2" . "Split Window Vertically") . split-window-vertically)
	(("3" . "Split Window Horizontally") . split-window-horizontally)
	(("4" . "Ctl X 4 Prefix") . ctl-x-4-prefix)
	(("5" . "Ctl X 5 Prefix") . ctl-x-5-prefix)
	(("6" . "2c Command") . 2C-command)
	((";" . "Comment Set Column") . comment-set-column)
	(("<" . "Scroll Left") . scroll-left)
	(("=" . "What Cursor Position") . what-cursor-position)
	((">" . "Scroll Right") . scroll-right)
	(("[" . "Backward Page") . backward-page)
	(("]" . "Forward Page") . forward-page)
	(("^" . "Enlarge Window") . enlarge-window)
	(("`" . "Next Error") . next-error)
	;; (("a" . "Prefix Command") . Prefix Command)
	(("b" . "Switch To Buffer") . switch-to-buffer)
	(("d" . "Dired") . dired)
	(("e" . "Kmacro End And Call Macro") . kmacro-end-and-call-macro)
	(("f" . "Set Fill Column") . set-fill-column)
	(("h" . "Mark Whole Buffer") . mark-whole-buffer)
	(("i" . "Insert File") . insert-file)
	(("k" . "Kill Buffer") . kill-buffer)
	(("l" . "Count Lines Page") . count-lines-page)
	(("m" . "Compose Mail") . compose-mail)
	;; (("n" . "Prefix Command") . Prefix Command)
	(("o" . "Other Window") . other-window)
	(("q" . "Kbd Macro Query") . kbd-macro-query)
	;; (("r" . "Prefix Command") . Prefix Command)
	(("s" . "Save Some Buffers") . save-some-buffers)
	(("u" . "Advertised Undo") . advertised-undo)
	(("v" . "Vc Prefix Map") . vc-prefix-map)
	(("z" . "Repeat") . repeat)
	(("{" . "Shrink Window Horizontally") . shrink-window-horizontally)
	(("}" . "Enlarge Window Horizontally") . enlarge-window-horizontally)
	(("DEL" . "Backward Kill Sentence") . backward-kill-sentence)

	(("C-SPC" . "Pop Global Mark") . pop-global-mark)
	(("<C-left>" . "Previous Buffer") . previous-buffer)
	(("<C-right>" . "Next Buffer") . next-buffer)
	(("<left>" . "Previous Buffer") . previous-buffer)
	(("<right>" . "Next Buffer") . next-buffer)

	;; (("C-k C-a" . "Kmacro Add Counter") . kmacro-add-counter)
	;; (("C-k C-c" . "Kmacro Set Counter") . kmacro-set-counter)
	;; (("C-k C-d" . "Kmacro Delete Ring Head") . kmacro-delete-ring-head)
	;; (("C-k C-e" . "Kmacro Edit Macro Repeat") . kmacro-edit-macro-repeat)
	;; (("C-k C-f" . "Kmacro Set Format") . kmacro-set-format)
	;; (("C-k TAB" . "Kmacro Insert Counter") . kmacro-insert-counter)
	;; (("C-k C-k" . "Kmacro End Or Call Macro Repeat") . kmacro-end-or-call-macro-repeat)
	;; (("C-k C-l" . "Kmacro Call Ring 2nd Repeat") . kmacro-call-ring-2nd-repeat)
	;; (("C-k RET" . "Kmacro Edit Macro") . kmacro-edit-macro)
	;; (("C-k C-n" . "Kmacro Cycle Ring Next") . kmacro-cycle-ring-next)
	;; (("C-k C-p" . "Kmacro Cycle Ring Previous") . kmacro-cycle-ring-previous)
	;; (("C-k C-s" . "Kmacro Start Macro") . kmacro-start-macro)
	;; (("C-k C-t" . "Kmacro Swap Ring") . kmacro-swap-ring)
	;; (("C-k C-v" . "Kmacro View Macro Repeat") . kmacro-view-macro-repeat)
	;; (("C-k SPC" . "Kmacro Step Edit Macro") . kmacro-step-edit-macro)
	;; (("C-k b" . "Kmacro Bind To Key") . kmacro-bind-to-key)
	;; (("C-k e" . "Edit Kbd Macro") . edit-kbd-macro)
	;; (("C-k l" . "Kmacro Edit Lossage") . kmacro-edit-lossage)
	;; (("C-k n" . "Kmacro Name Last Macro") . kmacro-name-last-macro)
	;; (("C-k q" . "Kbd Macro Query") . kbd-macro-query)
	;; (("C-k r" . "Apply Macro To Region Lines") . apply-macro-to-region-lines)
	;; (("C-k s" . "Kmacro Start Macro") . kmacro-start-macro)

	;; (("RET C-\\" . "Set Input Method") . set-input-method)
	;; (("RET F" . "Set File Name Coding System") . set-file-name-coding-system)
	;; (("RET X" . "Set Next Selection Coding System") . set-next-selection-coding-system)
	;; (("RET c" . "Universal Coding System Argument") . universal-coding-system-argument)
	;; (("RET f" . "Set Buffer File Coding System") . set-buffer-file-coding-system)
	;; (("RET k" . "Set Keyboard Coding System") . set-keyboard-coding-system)
	;; (("RET l" . "Set Language Environment") . set-language-environment)
	;; (("RET p" . "Set Buffer Process Coding System") . set-buffer-process-coding-system)
	;; (("RET r" . "Revert Buffer With Coding System") . revert-buffer-with-coding-system)
	;; (("RET t" . "Set Terminal Coding System") . set-terminal-coding-system)
	;; (("RET x" . "Set Selection Coding System") . set-selection-coding-system)

	;; (("ESC ESC" . "Repeat Complex Command") . repeat-complex-command)
	(("M-:" . "Repeat Complex Command") . repeat-complex-command)

	;; (("4 C-f" . "Find File Other Window") . find-file-other-window)
	;; (("4 C-o" . "Display Buffer") . display-buffer)
	;; (("4 ." . "Find Tag Other Window") . find-tag-other-window)
	;; (("4 0" . "Kill Buffer And Window") . kill-buffer-and-window)
	;; (("4 a" . "Add Change Log Entry Other Window") . add-change-log-entry-other-window)
	;; (("4 b" . "Switch To Buffer Other Window") . switch-to-buffer-other-window)
	;; (("4 c" . "Clone Indirect Buffer Other Window") . clone-indirect-buffer-other-window)
	;; (("4 d" . "Dired Other Window") . dired-other-window)
	;; (("4 f" . "Find File Other Window") . find-file-other-window)
	;; (("4 m" . "Compose Mail Other Window") . compose-mail-other-window)
	;; (("4 r" . "Find File Read Only Other Window") . find-file-read-only-other-window)

	;; (("5 C-f" . "Find File Other Frame") . find-file-other-frame)
	;; (("5 C-o" . "Display Buffer Other Frame") . display-buffer-other-frame)
	;; (("5 ." . "Find Tag Other Frame") . find-tag-other-frame)
	;; (("5 0" . "Delete Frame") . delete-frame)
	;; (("5 1" . "Delete Other Frames") . delete-other-frames)
	;; (("5 2" . "Make Frame Command") . make-frame-command)
	;; (("5 b" . "Switch To Buffer Other Frame") . switch-to-buffer-other-frame)
	;; (("5 d" . "Dired Other Frame") . dired-other-frame)
	;; (("5 f" . "Find File Other Frame") . find-file-other-frame)
	;; (("5 m" . "Compose Mail Other Frame") . compose-mail-other-frame)
	;; (("5 o" . "Other Frame") . other-frame)
	;; (("5 r" . "Find File Read Only Other Frame") . find-file-read-only-other-frame)

	;; (("a C-a" . "Add Mode Abbrev") . add-mode-abbrev)
	;; (("a '" . "Expand Abbrev") . expand-abbrev)
	;; (("a +" . "Add Mode Abbrev") . add-mode-abbrev)
	;; (("a -" . "Inverse Add Global Abbrev") . inverse-add-global-abbrev)
	;; (("a e" . "Expand Abbrev") . expand-abbrev)
	;; (("a g" . "Add Global Abbrev") . add-global-abbrev)
	;; (("a i" . "Prefix Command") . Prefix Command)
	;; (("a l" . "Add Mode Abbrev") . add-mode-abbrev)
	;; (("a n" . "Expand Jump To Next Slot") . expand-jump-to-next-slot)
	;; (("a p" . "Expand Jump To Previous Slot") . expand-jump-to-previous-slot)

	;; (("n d" . "Narrow To Defun") . narrow-to-defun)
	;; (("n n" . "Narrow To Region") . narrow-to-region)
	;; (("n p" . "Narrow To Page") . narrow-to-page)
	;; (("n w" . "Widen") . widen)

	;; (("r C-@" . "Point To Register") . point-to-register)
	;; (("r SPC" . "Point To Register") . point-to-register)
	;; (("r +" . "Increment Register") . increment-register)
	;; (("r b" . "Bookmark Jump") . bookmark-jump)
	;; (("r c" . "Clear Rectangle") . clear-rectangle)
	;; (("r d" . "Delete Rectangle") . delete-rectangle)
	;; (("r f" . "Frame Configuration To Register") . frame-configuration-to-register)
	;; (("r g" . "Insert Register") . insert-register)
	;; (("r i" . "Insert Register") . insert-register)
	;; (("r j" . "Jump To Register") . jump-to-register)
	;; (("r k" . "Kill Rectangle") . kill-rectangle)
	;; (("r l" . "Bookmark Bmenu List") . bookmark-bmenu-list)
	;; (("r m" . "Bookmark Set") . bookmark-set)
	;; (("r n" . "Number To Register") . number-to-register)
	;; (("r o" . "Open Rectangle") . open-rectangle)
	;; (("r r" . "Copy Rectangle To Register") . copy-rectangle-to-register)
	;; (("r s" . "Copy To Register") . copy-to-register)
	;; (("r t" . "String Rectangle") . string-rectangle)
	;; (("r w" . "Window Configuration To Register") . window-configuration-to-register)
	;; (("r x" . "Copy To Register") . copy-to-register)
	;; (("r y" . "Yank Rectangle") . yank-rectangle)
	;; (("r C-SPC" . "Point To Register") . point-to-register)

	;; (("v =" . "Vc Diff") . vc-diff)
	;; (("v a" . "Vc Update Change Log") . vc-update-change-log)
	;; (("v b" . "Vc Switch Backend") . vc-switch-backend)
	;; (("v c" . "Vc Cancel Version") . vc-cancel-version)
	;; (("v d" . "Vc Directory") . vc-directory)
	;; (("v g" . "Vc Annotate") . vc-annotate)
	;; (("v h" . "Vc Insert Headers") . vc-insert-headers)
	;; (("v i" . "Vc Register") . vc-register)
	;; (("v l" . "Vc Print Log") . vc-print-log)
	;; (("v m" . "Vc Merge") . vc-merge)
	;; (("v r" . "Vc Retrieve Snapshot") . vc-retrieve-snapshot)
	;; (("v s" . "Vc Create Snapshot") . vc-create-snapshot)
	;; (("v u" . "Vc Revert Buffer") . vc-revert-buffer)
	;; (("v v" . "Vc Next Action") . vc-next-action)
	;; (("v ~" . "Vc Version Other Window") . vc-version-other-window)

	;; (("a i g" . "Inverse Add Global Abbrev") . inverse-add-global-abbrev)
	;; (("a i l" . "Inverse Add Mode Abbrev") . inverse-add-mode-abbrev)
	))

(defun one-key-menu-Register-and-Rectangle ()
  "The `one-key' menu for Register and Rectangle"
  (interactive)
  (one-key-menu "Register and Rectangle" one-key-menu-Register-and-Rectangle-alist))

(define-key global-map "\C-xr" 'one-key-menu-Register-and-Rectangle)
